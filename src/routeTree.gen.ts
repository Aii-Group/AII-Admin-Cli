/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AuthenticationRouteImport } from './routes/_authentication'
import { Route as R403RouteImport } from './routes/403'
import { Route as AuthenticationTableBasicRouteImport } from './routes/_authentication/table/basic'
import { Route as AuthenticationTableAdvancedRouteImport } from './routes/_authentication/table/advanced'
import { Route as AuthenticationIframeNameRouteImport } from './routes/_authentication/iframe/$name'
import { Route as AuthenticationTabTabRouteImport } from './routes/_authentication/_tab/tab'
import { Route as AuthenticationDashboardDashboardRouteImport } from './routes/_authentication/_dashboard/dashboard'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticationRoute = AuthenticationRouteImport.update({
  id: '/_authentication',
  getParentRoute: () => rootRouteImport,
} as any)
const R403Route = R403RouteImport.update({
  id: '/403',
  path: '/403',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticationTableBasicRoute =
  AuthenticationTableBasicRouteImport.update({
    id: '/table/basic',
    path: '/table/basic',
    getParentRoute: () => AuthenticationRoute,
  } as any)
const AuthenticationTableAdvancedRoute =
  AuthenticationTableAdvancedRouteImport.update({
    id: '/table/advanced',
    path: '/table/advanced',
    getParentRoute: () => AuthenticationRoute,
  } as any)
const AuthenticationIframeNameRoute =
  AuthenticationIframeNameRouteImport.update({
    id: '/iframe/$name',
    path: '/iframe/$name',
    getParentRoute: () => AuthenticationRoute,
  } as any)
const AuthenticationTabTabRoute = AuthenticationTabTabRouteImport.update({
  id: '/_tab/tab',
  path: '/tab',
  getParentRoute: () => AuthenticationRoute,
} as any)
const AuthenticationDashboardDashboardRoute =
  AuthenticationDashboardDashboardRouteImport.update({
    id: '/_dashboard/dashboard',
    path: '/dashboard',
    getParentRoute: () => AuthenticationRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/403': typeof R403Route
  '/login': typeof LoginRoute
  '/dashboard': typeof AuthenticationDashboardDashboardRoute
  '/tab': typeof AuthenticationTabTabRoute
  '/iframe/$name': typeof AuthenticationIframeNameRoute
  '/table/advanced': typeof AuthenticationTableAdvancedRoute
  '/table/basic': typeof AuthenticationTableBasicRoute
}
export interface FileRoutesByTo {
  '/403': typeof R403Route
  '/login': typeof LoginRoute
  '/dashboard': typeof AuthenticationDashboardDashboardRoute
  '/tab': typeof AuthenticationTabTabRoute
  '/iframe/$name': typeof AuthenticationIframeNameRoute
  '/table/advanced': typeof AuthenticationTableAdvancedRoute
  '/table/basic': typeof AuthenticationTableBasicRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/403': typeof R403Route
  '/_authentication': typeof AuthenticationRouteWithChildren
  '/login': typeof LoginRoute
  '/_authentication/_dashboard/dashboard': typeof AuthenticationDashboardDashboardRoute
  '/_authentication/_tab/tab': typeof AuthenticationTabTabRoute
  '/_authentication/iframe/$name': typeof AuthenticationIframeNameRoute
  '/_authentication/table/advanced': typeof AuthenticationTableAdvancedRoute
  '/_authentication/table/basic': typeof AuthenticationTableBasicRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/403'
    | '/login'
    | '/dashboard'
    | '/tab'
    | '/iframe/$name'
    | '/table/advanced'
    | '/table/basic'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/403'
    | '/login'
    | '/dashboard'
    | '/tab'
    | '/iframe/$name'
    | '/table/advanced'
    | '/table/basic'
  id:
    | '__root__'
    | '/403'
    | '/_authentication'
    | '/login'
    | '/_authentication/_dashboard/dashboard'
    | '/_authentication/_tab/tab'
    | '/_authentication/iframe/$name'
    | '/_authentication/table/advanced'
    | '/_authentication/table/basic'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  R403Route: typeof R403Route
  AuthenticationRoute: typeof AuthenticationRouteWithChildren
  LoginRoute: typeof LoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authentication': {
      id: '/_authentication'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticationRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/403': {
      id: '/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof R403RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authentication/table/basic': {
      id: '/_authentication/table/basic'
      path: '/table/basic'
      fullPath: '/table/basic'
      preLoaderRoute: typeof AuthenticationTableBasicRouteImport
      parentRoute: typeof AuthenticationRoute
    }
    '/_authentication/table/advanced': {
      id: '/_authentication/table/advanced'
      path: '/table/advanced'
      fullPath: '/table/advanced'
      preLoaderRoute: typeof AuthenticationTableAdvancedRouteImport
      parentRoute: typeof AuthenticationRoute
    }
    '/_authentication/iframe/$name': {
      id: '/_authentication/iframe/$name'
      path: '/iframe/$name'
      fullPath: '/iframe/$name'
      preLoaderRoute: typeof AuthenticationIframeNameRouteImport
      parentRoute: typeof AuthenticationRoute
    }
    '/_authentication/_tab/tab': {
      id: '/_authentication/_tab/tab'
      path: '/tab'
      fullPath: '/tab'
      preLoaderRoute: typeof AuthenticationTabTabRouteImport
      parentRoute: typeof AuthenticationRoute
    }
    '/_authentication/_dashboard/dashboard': {
      id: '/_authentication/_dashboard/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticationDashboardDashboardRouteImport
      parentRoute: typeof AuthenticationRoute
    }
  }
}

interface AuthenticationRouteChildren {
  AuthenticationDashboardDashboardRoute: typeof AuthenticationDashboardDashboardRoute
  AuthenticationTabTabRoute: typeof AuthenticationTabTabRoute
  AuthenticationIframeNameRoute: typeof AuthenticationIframeNameRoute
  AuthenticationTableAdvancedRoute: typeof AuthenticationTableAdvancedRoute
  AuthenticationTableBasicRoute: typeof AuthenticationTableBasicRoute
}

const AuthenticationRouteChildren: AuthenticationRouteChildren = {
  AuthenticationDashboardDashboardRoute: AuthenticationDashboardDashboardRoute,
  AuthenticationTabTabRoute: AuthenticationTabTabRoute,
  AuthenticationIframeNameRoute: AuthenticationIframeNameRoute,
  AuthenticationTableAdvancedRoute: AuthenticationTableAdvancedRoute,
  AuthenticationTableBasicRoute: AuthenticationTableBasicRoute,
}

const AuthenticationRouteWithChildren = AuthenticationRoute._addFileChildren(
  AuthenticationRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  R403Route: R403Route,
  AuthenticationRoute: AuthenticationRouteWithChildren,
  LoginRoute: LoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
